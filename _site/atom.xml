<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Junyoung's</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2017-04-12T22:29:00+09:00</updated>
 <author>
   <name>JUNYOUNGBLOG</name>
   <uri></uri>
   <email>wnsdud1861@gmail.com</email>
 </author>

 

 <entry>
   <title>SSH Key 등록으로 패스워드 없이 SSH 접속하기</title>
   <link href="http://localhost:4000/ssh-register"/>
   <id>http://localhost:4000/ssh-register</id>
   <updated>2017-04-12T00:00:00+09:00</updated>
   <content type="html">&lt;p&gt;ssh 접속 시 계속 비밀번호를 입력하는게 여간 귀찮지 않을수가 없습니다. ssh key 등록을 통해 비밀번호를 입력하지 않고 접속하는 방법입니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;SSH Key 생성하기&lt;/p&gt; &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ssh-keygen -t rsa Generating public/private rsa key pair. Enter file &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;which to save the key &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Users/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;USER&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/.ssh/id_rsa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:...</content>
 </entry>

 

 <entry>
   <title>Hadoop 정리노트</title>
   <link href="http://localhost:4000/hadoop"/>
   <id>http://localhost:4000/hadoop</id>
   <updated>2017-04-12T00:00:00+09:00</updated>
   <content type="html">&lt;blockquote&gt; &lt;p&gt;본 포스트는 Apache Hadoop 을 공부하면서 드문드문 계속 정리해 업데이트 되는 노트 입니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;hadoop&quot;&gt;Hadoop?&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;대용량 데이터를 처리하는 분산 응용 프로그램을 작성하고 실행시키기 위한 오픈소스 프레임워크 &lt;ul&gt; &lt;li&gt;접근&lt;/li&gt; &lt;li&gt;견고성&lt;/li&gt; &lt;li&gt;확장 가능성&lt;/li&gt; &lt;li&gt;간단성&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Map/Reduce 로 간단한 프로그램이의 확장&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;hadoop-의-데몬들과-그-역할&quot;&gt;Hadoop 의 데몬들과 그 역할&lt;/h3&gt; &lt;ul&gt;...</content>
 </entry>

 

 <entry>
   <title>Apache Beam</title>
   <link href="http://localhost:4000/apache-beam"/>
   <id>http://localhost:4000/apache-beam</id>
   <updated>2017-03-13T00:00:00+09:00</updated>
   <content type="html">&lt;p&gt;&lt;img src=&quot;img/beam_logo_s.png&quot; alt=&quot;Beam Logo&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;GSoC&lt;/a&gt;에 참가하기 위해 프로젝트 리스트를 보다가 &lt;a href=&quot;https://beam.apache.org/&quot;&gt;Apache Beam&lt;/a&gt;을 알게되었습니다. Apache Beam 프로젝트는 스트리밍 데이터 처리 작업을 할 수 있도록 프로그래밍 모델을 제공합니다.&lt;/p&gt; &lt;p&gt;현재 도큐멘테이션이 미완인 상태인데, GSoC(Google Summer of Code) 에서 기존 셰익스피어의 단어 빈도를 기본 TF-IDF로 분석하는 예제보다 &lt;a href=&quot;https://issues.apache.org/jira/browse/BEAM-1439?filter=12339687&quot;&gt;더 확장되고 고급화된...</content>
 </entry>

 

 <entry>
   <title>AWS Lambda Proxy Integration 활용</title>
   <link href="http://localhost:4000/more-usage-lambda-proxy-integration"/>
   <id>http://localhost:4000/more-usage-lambda-proxy-integration</id>
   <updated>2017-03-07T00:00:00+09:00</updated>
   <content type="html">&lt;p&gt;지금까지 작성한 API 들은 성공이든 실패든 HTTP status 200 OK 를 던져주고 에러 코드나 메세지 등으로 구분하여 작성했습니다. 이번 서비스를 준비하면서 좀더 표준적인 API 설계를 해보고 싶어서 상태 코드로 에러를 분류하는 방법을 시도해 보았고, 고심 끝에 (…) 나온 방법들을 공유합니다.&lt;/p&gt; &lt;p&gt;API-Gateway 단의 Integration response 를 커스텀하는 방법과, Lambda Proxy Integration...</content>
 </entry>

 

 <entry>
   <title>mongodb 올바르게 유저 생성하기</title>
   <link href="http://localhost:4000/mongodb-auth-correctly"/>
   <id>http://localhost:4000/mongodb-auth-correctly</id>
   <updated>2017-03-07T00:00:00+09:00</updated>
   <content type="html">&lt;p&gt;mongodb 유저를 생성하기 위해서는 먼저, mongodb 의 root 계정을 만들어야 합니다.&lt;/p&gt; &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;use admin &lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;db.createUser&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;user: &lt;span class=&quot;s2&quot;&gt;&quot;ROOT_ID&quot;&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;ROOT_PASSWO&quot;&lt;/span&gt;, roles:[&lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]})&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;mongodb 서버를 재시작 한 후, 외부에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;--auth&lt;/code&gt; 플래그를 주고 root 계정으로 로그인합니다.&lt;/p&gt; &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo...</content>
 </entry>

 

 <entry>
   <title>AWS API Gateway CORS 설정</title>
   <link href="http://localhost:4000/config-cors-aws-api-gateway"/>
   <id>http://localhost:4000/config-cors-aws-api-gateway</id>
   <updated>2017-03-07T00:00:00+09:00</updated>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/img/swagger_editor_cors_introduce.png&quot; alt=&quot;swagger_editor_cors_introduce&quot; /&gt;&lt;/p&gt; &lt;p&gt;Swagger Editor 에서 Try this operation 을 클릭하면, 이런 안내문구가 나옵니다. CORS 는 Cross-origin resource sharing 의 약자로, 다른 도메인의 서버에 URL 을 호출할 경우 보안상의 문제가 발생하게 되는데, 이 접근을 허용할 수 있게 해주는 메커니즘입니다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Learn more 를 클릭하면 해당 이슈에 대한 자세한 설명을...</content>
 </entry>

 

 <entry>
   <title>Hello World</title>
   <link href="http://localhost:4000/Hello-World"/>
   <id>http://localhost:4000/Hello-World</id>
   <updated>2017-03-06T00:00:00+09:00</updated>
   <content type="html">&lt;p&gt;글재주는 없지만..&lt;br /&gt; 이전에 겪었던 이슈나 앞으로 겪게될 문제와 해결 했던 것들을 여기에 정리하려 합니다.&lt;/p&gt; &lt;p&gt;첫글이라 쓸말이 없어 현재 블로그의 스택을 잠깐 말하자면,&lt;br /&gt; Jekyll + Github Page 기반의 블로그입니다.&lt;/p&gt; &lt;p&gt;Jekyll 테마는 &lt;a href=&quot;https://github.com/dyutibarma/monochrome&quot;&gt;monochrome&lt;/a&gt;이고, 약간 변형해서 사용하고 있습니다.&lt;/p&gt; &lt;p&gt;disqus 를 달아 댓글 기능을 추가하고, 문구와 네비게이션 바를 수정했습니다.&lt;br /&gt; google...</content>
 </entry>

 

</feed>